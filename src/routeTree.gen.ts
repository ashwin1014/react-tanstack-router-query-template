/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as authenticatedImport } from './routes/__authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as authenticatedDashboardImport } from './routes/__authenticated/dashboard'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const authenticatedRoute = authenticatedImport.update({
  id: '/__authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const authenticatedDashboardRoute = authenticatedDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => authenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/__authenticated': {
      id: '/__authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof authenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/__authenticated/dashboard': {
      id: '/__authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof authenticatedDashboardImport
      parentRoute: typeof authenticatedImport
    }
  }
}

// Create and export the route tree

interface authenticatedRouteChildren {
  authenticatedDashboardRoute: typeof authenticatedDashboardRoute
}

const authenticatedRouteChildren: authenticatedRouteChildren = {
  authenticatedDashboardRoute: authenticatedDashboardRoute,
}

const authenticatedRouteWithChildren = authenticatedRoute._addFileChildren(
  authenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof authenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/dashboard': typeof authenticatedDashboardRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof authenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/dashboard': typeof authenticatedDashboardRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/__authenticated': typeof authenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/__authenticated/dashboard': typeof authenticatedDashboardRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/login' | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/login' | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/__authenticated'
    | '/login'
    | '/__authenticated/dashboard'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authenticatedRoute: typeof authenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authenticatedRoute: authenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/__authenticated",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/__authenticated": {
      "filePath": "__authenticated.tsx",
      "children": [
        "/__authenticated/dashboard"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/__authenticated/dashboard": {
      "filePath": "__authenticated/dashboard.tsx",
      "parent": "/__authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
